<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAANFSURBVEhLjVVtUxJRFOaP9P6D+lpjZj+gDyYLOFQ2FZMv
        qU32Jcdp/FCpJburIKXIyu6CaaCoWCZOQibajH1MTU04nXO5LOy6kc/MM1zOy3PfzrnrqAUhLl1y69Jt
        typG3Lr8w63KR0SXLm+TDX+9Tm30Ag8/PZpj/otuXfSjSBGFoSYpRpPfeqLyeZ5eG0Js5Dquct9WrAYF
        Vdzz6NI1LmMPjyY12yWX2bOgwtNU1NZnUJMFLmcGW7ldAmf3vAJlPJ6L2MaU6dLEOi5bAjtzy7F0JCeh
        PRE2/iu5FS4PMJldMeztyTCLLf8vUdx1TvvPcXlcvSoNVwdQwv7RIRSKRUj/zMPSTp6NyygUC7C4s4m+
        LSiifQ9jqxdTojRUEqdStFTLo/iYSfB/oAkfxoJV4kjUZJXF6rzagXSpIsxvfOXpAH8Kx6B8WYQeJQDP
        lCBMrS7BcaHAvQCJ3BrLsepQ0TioYawO4nw+y5JJvCsyArfGB5iIS5XYuFsZNSZJbq6fyCcKuhzGHWCH
        VhmpWtTNNeOIFFytKyqCMDkMDa2djE4cky2aWWYxdETR7xnoslaXJuVxB9j+3EB1bsXzjwrz1fs64HK9
        k/EGTkK23sQUj6rgyVwpniio8qFpAmoiK/pSGvPVtfiMCRraupjtRUrnURV0zrw3T8AeLm4g3gsOQCid
        ZNsm6BsZZr8p9sNV731GITLMbPGNNRZDdxFKJ6Al+BqEKb+hxY/o5CU3hYcg8a2S3JuOmfzEvnTcWMRs
        LsNyrDHICdqB18YBC1s5lkw4RqEPW+vQ/2mGcWY7axQBgSrOTgO1PQ56z62NRu1PHXpa0GRtiQmTOJ5/
        wXgu6D2vdrZOh2Dv8IAdQQK3P5tdNY6DQMc2u77KGozEdw9+gw+7v1oDNQeYOIFamt7zspMa6m5oELyj
        L6Ex9Ipx/HOKywOMLc9B4zu0I+8EkGODpk7GBvvVpMlnuHwJ9LEoBzBqUmWMbNWCXB7ApwZMPmssvqZX
        uKwZLk1ymQMrpM59EHqDHGJju5gSpSYuZw/6WNB7bp/8b9Kx/HPlVtDt03turS47UrXQhXpigbM8/fSg
        y6cnl15F6kpqfSKNUXyC6tz05ToBh+MvXIDN6ynNcqsAAAAASUVORK5CYII=
</value>
  </data>
</root>